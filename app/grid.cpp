/*
    defines functions for maze generation
*/

#include <random>
#include <vector>
#include <iostream>

/*********************************************************************************
 *  @brief returns a size*size uniform spanning tree maze generated by the
 *         Aldous-Broder algorithm 
 *
 *  @param size dictates size of the generated maze (min 2, max 99)
 *  @returns size*size uniform spanning tree maze
 *********************************************************************************/
std::vector<std::vector<int>> aldousBroder(int size) 
{
    // begin assuming movement is allowed in any direction
    bool moveOptions[4] = {true, true, true, true};

    // initialize random engine and distributions
    std::random_device rd;
    std::mt19937 randEngine(rd());
    std::uniform_int_distribution<int> directionDist(1, 4);
    std::uniform_int_distribution<int> gridDist(1, size*2 - 1);

    // initialize blank grid
    std::vector<std::vector<int>> grid((size*2 + 1), std::vector<int> ((size*2 + 1), 0));

    // pick a random grid cell
    int row = 0, col = 0;
    while ( (row % 2 != 1) || (col % 2 != 1) ) 
    {
        row = gridDist(randEngine);
        col = gridDist(randEngine);
    }

    

    return grid;
}

